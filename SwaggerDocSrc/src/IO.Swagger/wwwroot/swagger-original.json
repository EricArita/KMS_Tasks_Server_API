{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "KMS_Tasks Api Doc",
    "description" : "Api document for backend implementations in KMS_Tasks project",
    "contact" : {
      "email" : "buiphantho@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/KMS_Tasks/Api_Doc/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Projects",
    "description" : "API for operations on Projects"
  }, {
    "name" : "Sections",
    "description" : "API for operations on Sections"
  }, {
    "name" : "Tasks",
    "description" : "API for operations on Tasks"
  } ],
  "paths" : {
    "/api/v1/Task/task" : {
      "post" : {
        "tags" : [ "Tasks" ],
        "description" : "Add a new task",
        "operationId" : "addTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewTaskModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          }
        }
      }
    },
    "/api/v1/Task/{userId}/tasks" : {
      "get" : {
        "tags" : [ "Tasks" ],
        "description" : "Get all of related tasks of an user",
        "operationId" : "getTasks",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "Category Id by which you wanna get tasks",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "byte"
          },
          "example" : "1 (Today) - 2(Upcoming) - null (get all)"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Task/task/{taskId}" : {
      "patch" : {
        "tags" : [ "Tasks" ],
        "description" : "update or soft delete a task",
        "operationId" : "updateTask",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatedInfoTaskModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Project/{userId}/projects" : {
      "get" : {
        "tags" : [ "Projects" ],
        "description" : "Get all projects of an user",
        "operationId" : "getAllProjects",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Project/project" : {
      "post" : {
        "tags" : [ "Projects" ],
        "description" : "Add a new project",
        "operationId" : "addProject",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewProjectModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Project/project/{projectId}" : {
      "delete" : {
        "tags" : [ "Projects" ],
        "description" : "Delete the project, going by projectId (soft delete)",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Projects" ],
        "description" : "Modify the project information including name, description",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatedInfoProjectModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Section/{projectId}/sections" : {
      "get" : {
        "tags" : [ "Sections" ],
        "description" : "Get all sections of a project, by projectId",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Section/section" : {
      "post" : {
        "tags" : [ "Sections" ],
        "description" : "Add a new section",
        "operationId" : "addSection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewSectionModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Section/section/{sectionId}" : {
      "delete" : {
        "tags" : [ "Sections" ],
        "operationId" : "Delete section",
        "parameters" : [ {
          "name" : "sectionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Sections" ],
        "operationId" : "Modify section (name)",
        "parameters" : [ {
          "name" : "sectionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatedInfoSectionModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "NewProjectModel" : {
        "required" : [ "createdBy", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "number",
            "format" : "int 32"
          }
        }
      },
      "UpdatedInfoProjectModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "NewSectionModel" : {
        "required" : [ "createdBy", "name", "project" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Section name"
          },
          "project" : {
            "type" : "number",
            "format" : "int 32"
          },
          "createdBy" : {
            "type" : "number",
            "format" : "int 32"
          }
        }
      },
      "UpdatedInfoSectionModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "This is a new section name"
          },
          "deleted" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "NewTaskModel" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2016-08-29T09:12:33.001Z"
          },
          "scheduleString" : {
            "type" : "string",
            "example" : "Today"
          },
          "priorityId" : {
            "type" : "number",
            "format" : "int32"
          },
          "projectId" : {
            "type" : "number",
            "format" : "int32"
          },
          "sectionId" : {
            "type" : "number",
            "format" : "int32"
          },
          "parentId" : {
            "type" : "number",
            "format" : "int32"
          },
          "reminder" : {
            "type" : "boolean"
          },
          "reminderSchedule" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-11-18T07:39:50.462Z"
          },
          "assignedBy" : {
            "type" : "number",
            "format" : "int 32"
          },
          "assignedFor" : {
            "type" : "number",
            "format" : "int 32"
          },
          "createdBy" : {
            "type" : "number",
            "format" : "int 32"
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-11-18T07:39:50.462Z"
          }
        }
      },
      "UpdatedInfoTaskModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "schedule" : {
            "type" : "string"
          },
          "scheduleString" : {
            "type" : "string"
          },
          "priorityId" : {
            "type" : "number",
            "format" : "int32"
          },
          "projectId" : {
            "type" : "number",
            "format" : "int32"
          },
          "sectionId" : {
            "type" : "number",
            "format" : "int32"
          },
          "parentId" : {
            "type" : "number",
            "format" : "int32"
          },
          "reminderSchedule" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reminder" : {
            "type" : "boolean"
          },
          "assignedBy" : {
            "type" : "number",
            "format" : "int32"
          },
          "assignedFor" : {
            "type" : "number",
            "format" : "int32"
          },
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "Response" : {
        "type" : "object",
        "properties" : {
          "ok" : {
            "type" : "boolean"
          },
          "code" : {
            "type" : "number"
          },
          "data" : {
            "description" : "Any type of value - string, number, array, object, boolean..."
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "message" : {
            "type" : "string"
          }
        },
        "example" : {
          "code" : 0.8008281904610115,
          "data" : "",
          "ok" : true,
          "message" : "message",
          "errors" : [ "errors", "errors" ]
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}
