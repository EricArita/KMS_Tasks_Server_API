/*
 * KMS_Tasks Api Doc
 *
 * Api document for backend implementations in KMS_Tasks project
 *
 * OpenAPI spec version: 1.0.0
 * Contact: buiphantho@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProjectsApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Add a new project</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/KMS_Tasks/Api_Doc/1.0.0/api/v1/Project/project")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AddProject")]
        [SwaggerResponse(statusCode: 200, type: typeof(Response), description: "Success")]
        public virtual IActionResult AddProject([FromBody]NewProjectModel body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Response));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0.8008281904610115,\n  \"data\" : \"\",\n  \"ok\" : true,\n  \"message\" : \"message\",\n  \"errors\" : [ \"errors\", \"errors\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Response>(exampleJson)
                        : default(Response);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Delete a project</remarks>
        /// <param name="projectId"></param>
        /// <response code="200">Success</response>
        [HttpDelete]
        [Route("/KMS_Tasks/Api_Doc/1.0.0/api/v1/Project/project/{projectId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiV1ProjectProjectProjectIdDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(Response), description: "Success")]
        public virtual IActionResult ApiV1ProjectProjectProjectIdDelete([FromRoute][Required]decimal? projectId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Response));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0.8008281904610115,\n  \"data\" : \"\",\n  \"ok\" : true,\n  \"message\" : \"message\",\n  \"errors\" : [ \"errors\", \"errors\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Response>(exampleJson)
                        : default(Response);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get a particular project</remarks>
        /// <param name="projectId"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/KMS_Tasks/Api_Doc/1.0.0/api/v1/Project/project/{projectId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiV1ProjectProjectProjectIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Response), description: "Success")]
        public virtual IActionResult ApiV1ProjectProjectProjectIdGet([FromRoute][Required]decimal? projectId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Response));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0.8008281904610115,\n  \"data\" : \"\",\n  \"ok\" : true,\n  \"message\" : \"message\",\n  \"errors\" : [ \"errors\", \"errors\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Response>(exampleJson)
                        : default(Response);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Modify the project information including name, description</remarks>
        /// <param name="projectId"></param>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPatch]
        [Route("/KMS_Tasks/Api_Doc/1.0.0/api/v1/Project/project/{projectId}")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ApiV1ProjectProjectProjectIdPatch")]
        [SwaggerResponse(statusCode: 200, type: typeof(Response), description: "Success")]
        public virtual IActionResult ApiV1ProjectProjectProjectIdPatch([FromRoute][Required]decimal? projectId, [FromBody]UpdatedInfoProjectModel body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Response));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0.8008281904610115,\n  \"data\" : \"\",\n  \"ok\" : true,\n  \"message\" : \"message\",\n  \"errors\" : [ \"errors\", \"errors\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Response>(exampleJson)
                        : default(Response);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get all projects of an user</remarks>
        /// <param name="userId"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/KMS_Tasks/Api_Doc/1.0.0/api/v1/Project/{userId}/projects")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("GetAllProjects")]
        [SwaggerResponse(statusCode: 200, type: typeof(Response), description: "Success")]
        public virtual IActionResult GetAllProjects([FromRoute][Required]decimal? userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Response));
            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0.8008281904610115,\n  \"data\" : \"\",\n  \"ok\" : true,\n  \"message\" : \"message\",\n  \"errors\" : [ \"errors\", \"errors\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Response>(exampleJson)
                        : default(Response);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
